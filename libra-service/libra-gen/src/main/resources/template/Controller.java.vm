package ${package}.${moduleName}.controller;
/**
*    Copyright [2021] [LibraPlatform of copyright huangfubin]
*
*    Licensed under the Apache License, Version 2.0 (the "License");
*    you may not use this file except in compliance with the License.
*    You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*    Unless required by applicable law or agreed to in writing, software
*    distributed under the License is distributed on an "AS IS" BASIS,
*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*    See the License for the specific language governing permissions and
*    limitations under the License.
*/

import ${package}.${moduleName}.api.${className}ApiService;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;
import cn.hfbin.common.core.api.ResponseData;
import cn.hfbin.common.security.annotation.PreAuthorize;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

/**
 * @Author: ${author}
 * @Description: ${comments}
 * @Date: ${datetime}
 */
@RestController
@RequestMapping("/${pathName}" )
@Api(tags = "${comments}管理")
public class ${className}Controller implements ${className}ApiService{

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 分页查询
     * @param pageNo 页码
     * @param pageSize 页数
     * @param ${classname} ${comments}
     * @return ResponseData
     */
    @Override
    @ApiOperation(value = "分页查询数据", notes = "分页查询数据")
    @PreAuthorize("${pathName}:page")
    public ResponseData<Page<${className}>> page(Integer pageNo,
                                                 Integer pageSize,
                                                ${className} ${classname}) {
        return ResponseData.ok(${classname}Service.page(pageNo, pageSize, ${classname}));
    }


    /**
     * 通过id查询${comments}
     * @param ${pk.lowerAttrName} id
     * @return ResponseData
     */
    @Override
    @ApiOperation(value = "通过id查询", notes = "通过id查询")
    @PreAuthorize("${pathName}:info")
    public ResponseData<${className}> getById(${pk.attrType} ${pk.lowerAttrName}) {
        return ResponseData.ok(${classname}Service.getById(${pk.lowerAttrName}));
    }

    /**
     * 新增${comments}
     * @param ${classname} ${comments}
     * @return ResponseData
     */
    @Override
    @ApiOperation(value = "新增${comments}", notes = "新增${comments}")
    @PreAuthorize("${pathName}:save")
    public ResponseData<Integer> save(${className} ${classname}) {
        return ResponseData.ok(${classname}Service.insert(${classname}));
    }

    /**
     * 修改${comments}
     * @param ${classname} ${comments}
     * @return ResponseData
     */
    @Override
    @ApiOperation(value = "更新${comments}", notes = "更新${comments}")
    @PreAuthorize("${pathName}:update")
    public ResponseData<Integer> updateById(${className} ${classname}) {
        return ResponseData.ok(${classname}Service.update(${classname}));
    }

    /**
     * 通过id删除${comments}
     * @param ${pk.lowerAttrName} id
     * @return ResponseData
     */
    @Override
    @ApiOperation(value = "通过id删除${comments}", notes = "通过id删除${comments}")
    @PreAuthorize("${pathName}:delete")
    public ResponseData<Integer> removeById(${pk.attrType} ${pk.lowerAttrName}) {
        return ResponseData.ok(${classname}Service.deleteById(${pk.lowerAttrName}));
    }

}
